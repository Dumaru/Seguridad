/*
 * Copyright (C) 2020 robin
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Vista;

import controlador.FileShare;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.lang.model.SourceVersion;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.bouncycastle.operator.OperatorCreationException;

/**
 *
 * @author Sergio Vega
 */
public class Claves extends javax.swing.JFrame {

    private FileShare fileShare;
    private String pathBaseClaves = "";
    private String nombrePrivada = "";
    private String nombrePublica = "";

    private String pathClavePrivada = "";
    private String pathClavePublica = "";

    private String pathArchivoCifrado = "";
    private String pathArchivoPlano = "";
    private String pathSalidaCifrado = "";
    private String pathSalidaDescifrado = "";

    /**
     * Creates new form Claves
     */
    public Claves() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.btnCrearClaves.setVisible(false);
        fileShare = new FileShare();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnPathClaves = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreClavePrivada = new javax.swing.JTextField();
        nombreClavePublica = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnCrearClaves = new javax.swing.JButton();
        pathClaves = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pathArchivo = new javax.swing.JTextField();
        pathSalidaArchivoCifrado = new javax.swing.JTextField();
        pathClavePub = new javax.swing.JTextField();
        btnPathClavePub = new javax.swing.JButton();
        btnArchivoCifrar = new javax.swing.JButton();
        BtnCarpetaDestinoCifrado = new javax.swing.JButton();
        btnCifrar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pathArchivoDescifrar = new javax.swing.JTextField();
        pathClavePriv = new javax.swing.JTextField();
        pathArchivoDescifrado = new javax.swing.JTextField();
        btnBuscarClavePriv = new javax.swing.JButton();
        btnPathDestinoDescifrado = new javax.swing.JButton();
        btnBuscarArchivoCifrado = new javax.swing.JButton();
        btnDescifrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPathClaves.setText("Seleccionar");
        btnPathClaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPathClavesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText(" Clave Pública:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText(" Clave Privada:");

        nombreClavePrivada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreClavePrivadaActionPerformed(evt);
            }
        });

        jLabel3.setText("Seleccione  la carpeta donde desea almacenar las claves:");

        btnCrearClaves.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCrearClaves.setText("Crear");
        btnCrearClaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearClavesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 315, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nombreClavePrivada, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(nombreClavePublica)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pathClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(btnPathClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCrearClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel3)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathClaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPathClaves))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreClavePrivada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreClavePublica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(btnCrearClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Crear Claves", jPanel1);

        jLabel4.setText("Seleccione el archivo a cifrar:");

        jLabel5.setText("Seleccione el archivo de Clave  Pública:");

        jLabel6.setText("Seleccione el directorio y nombre del archivo que se cifrara:");

        pathArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathArchivoActionPerformed(evt);
            }
        });

        btnPathClavePub.setText("Buscar...");
        btnPathClavePub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPathClavePubActionPerformed(evt);
            }
        });

        btnArchivoCifrar.setText("Buscar...");
        btnArchivoCifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivoCifrarActionPerformed(evt);
            }
        });

        BtnCarpetaDestinoCifrado.setText("Guardar");
        BtnCarpetaDestinoCifrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCarpetaDestinoCifradoActionPerformed(evt);
            }
        });

        btnCifrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCifrar.setText("Cifrar");
        btnCifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCifrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pathClavePub, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pathArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pathSalidaArchivoCifrado, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnArchivoCifrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPathClavePub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnCarpetaDestinoCifrado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArchivoCifrar))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathClavePub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPathClavePub))
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathSalidaArchivoCifrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnCarpetaDestinoCifrado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnCifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Cifrar", jPanel2);

        jLabel7.setText("Seleccione el archivo a descifrar:");

        jLabel8.setText("Seleccione el archivo de Clave Privada:");

        jLabel9.setText("Seleccione la carpeta y nombre para el archivo descifrado:");

        btnBuscarClavePriv.setText("Buscar...");
        btnBuscarClavePriv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClavePrivActionPerformed(evt);
            }
        });

        btnPathDestinoDescifrado.setText("Guardar");
        btnPathDestinoDescifrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPathDestinoDescifradoActionPerformed(evt);
            }
        });

        btnBuscarArchivoCifrado.setText("Buscar...");
        btnBuscarArchivoCifrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarArchivoCifradoActionPerformed(evt);
            }
        });

        btnDescifrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDescifrar.setText("Descifrar");
        btnDescifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescifrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDescifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pathClavePriv, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pathArchivoDescifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnBuscarClavePriv)
                                .addComponent(btnBuscarArchivoCifrado)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(pathArchivoDescifrado, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnPathDestinoDescifrado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarArchivoCifrado)
                    .addComponent(pathArchivoDescifrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathClavePriv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarClavePriv))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathArchivoDescifrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPathDestinoDescifrado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(btnDescifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Descifrar", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPathClavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPathClavesActionPerformed
        this.burcarDirectorioClaves();

    }//GEN-LAST:event_btnPathClavesActionPerformed

    private void TFieldNombreClavePrivadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFieldNombreClavePrivadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFieldNombreClavePrivadaActionPerformed


    private void nombreClavePrivadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreClavePrivadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreClavePrivadaActionPerformed

    private void btnPathClavePubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPathClavePubActionPerformed
        this.CarpetaClavesPub();

    }//GEN-LAST:event_btnPathClavePubActionPerformed

    private void pathArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathArchivoActionPerformed

    private void btnPathDestinoDescifradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPathDestinoDescifradoActionPerformed

        this.CarpetaDestinoDescifrado();

    }//GEN-LAST:event_btnPathDestinoDescifradoActionPerformed

    private void btnBuscarClavePrivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClavePrivActionPerformed
        this.BuscarClavePriv();
    }//GEN-LAST:event_btnBuscarClavePrivActionPerformed

    private void btnArchivoCifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivoCifrarActionPerformed
        this.ArchivoCifrar();

    }//GEN-LAST:event_btnArchivoCifrarActionPerformed

    private void BtnCarpetaDestinoCifradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCarpetaDestinoCifradoActionPerformed
        this.CarpetaDestinoCifrado();
    }//GEN-LAST:event_BtnCarpetaDestinoCifradoActionPerformed

    private void btnBuscarArchivoCifradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarArchivoCifradoActionPerformed
        this.BuscarArchivoCifrado();
    }//GEN-LAST:event_btnBuscarArchivoCifradoActionPerformed

    private void btnCrearClavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearClavesActionPerformed

        this.CrearClaves();
    }//GEN-LAST:event_btnCrearClavesActionPerformed

    private void btnCifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCifrarActionPerformed
        this.Cifrar();

    }//GEN-LAST:event_btnCifrarActionPerformed

    private void btnDescifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescifrarActionPerformed
        this.Descifrar();

    }//GEN-LAST:event_btnDescifrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Claves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Claves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Claves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Claves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
                }

                new Claves().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCarpetaDestinoCifrado;
    private javax.swing.JButton btnArchivoCifrar;
    private javax.swing.JButton btnBuscarArchivoCifrado;
    private javax.swing.JButton btnBuscarClavePriv;
    private javax.swing.JButton btnCifrar;
    private javax.swing.JButton btnCrearClaves;
    private javax.swing.JButton btnDescifrar;
    private javax.swing.JButton btnPathClavePub;
    private javax.swing.JButton btnPathClaves;
    private javax.swing.JButton btnPathDestinoDescifrado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nombreClavePrivada;
    private javax.swing.JTextField nombreClavePublica;
    private javax.swing.JTextField pathArchivo;
    private javax.swing.JTextField pathArchivoDescifrado;
    private javax.swing.JTextField pathArchivoDescifrar;
    private javax.swing.JTextField pathClavePriv;
    private javax.swing.JTextField pathClavePub;
    private javax.swing.JTextField pathClaves;
    private javax.swing.JTextField pathSalidaArchivoCifrado;
    // End of variables declaration//GEN-END:variables

    public SourceVersion getSupportedSourceVersion() {
        return SourceVersion.latest();
    }

    /**
     * Selecciona el directorio donde se desea almacenar las claves
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void burcarDirectorioClaves() {
        //Crea objeto de tipo File chooser y muetra pantalla de guardado
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int opcion = chooser.showOpenDialog(null);

        File archivo = null;
        if (opcion == JFileChooser.APPROVE_OPTION) {
            archivo = chooser.getSelectedFile();
        }

        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathClaves.setText(archivo.getAbsolutePath());
            this.pathBaseClaves = archivo.getAbsolutePath();
        }
        //Verifica si la informacion esta completa y muestra el boton para crear las claves
        if (this.nombreClavePrivada.getText() == "" && this.nombreClavePublica.getText() == "") {
            this.btnCrearClaves.setVisible(false);

        } else {
            this.btnCrearClaves.setVisible(true);

        }

    }

    /**
     * Crea las claves publica y privada y las almacena en el directorio
     * seleccionado
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void CrearClaves() {

        if (this.nombreClavePublica.getText().isEmpty() || this.nombreClavePrivada.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "La informacion de las claves está incompleta");

        } else {
            this.nombrePrivada = this.nombreClavePrivada.getText().toString();
            this.nombrePublica = this.nombreClavePublica.getText().toString();
            try {
                this.fileShare.crearClaves(this.pathBaseClaves,
                        this.nombrePrivada,
                        this.nombrePublica);
                JOptionPane.showMessageDialog(null, "Se han creado las claves correctamente");

            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeySpecException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (KeyStoreException ex) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error: " + ex.getLocalizedMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error: " + ex.getLocalizedMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (OperatorCreationException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    /**
     * Selecciona el archivo que desea cifrar
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void ArchivoCifrar() {

        //Crea objeto de tipo File chooser y muetra pantalla de abrir archivo
        JFileChooser file = new JFileChooser();
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathArchivo.setText(archivo.getAbsolutePath());

        }

    }

    /**
     * Busca el archivo de clave pública para cifrar un archivo
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void CarpetaClavesPub() {
        //Crea objeto de tipo File chooser y muetra pantalla de abrir archivo
        JFileChooser file = new JFileChooser();
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathClavePub.setText(archivo.getAbsolutePath());

        }

    }

    /**
     * Selecciona la carpeta donde desea almacenar el archivo cifrado
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void CarpetaDestinoCifrado() {
        //Crea objeto de tipo File chooser y muetra pantalla de guardar archivo
        JFileChooser chooser = new JFileChooser();
        chooser.showSaveDialog(null);
        File archivo = chooser.getSelectedFile();
        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathSalidaArchivoCifrado.setText(archivo.getAbsolutePath());
            this.pathArchivoCifrado = archivo.getAbsolutePath();
        }

    }

    /**
     * Valida si la información para cifrar esta completa
     *
     * @param
     * @return
     * @throws IOException
     */
    public void Cifrar() {
        //Valida si se completaron los campos de texto y arroja mensaje de confirmación
        if (this.pathArchivo.getText().isEmpty() || this.pathClavePub.getText().isEmpty() || this.pathSalidaArchivoCifrado.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Por favor, complete la información");

        } else {
            this.pathSalidaCifrado = this.pathSalidaArchivoCifrado.getText().toString();
            this.pathArchivoPlano = this.pathArchivo.getText().toString();
            this.pathClavePublica = this.pathClavePub.getText().toString();
            try {
                String pathCifrado = fileShare.cifrarArchivo(pathSalidaCifrado,
                        pathArchivoPlano, pathClavePublica);
                JOptionPane.showMessageDialog(null, "Se han cifrado correctamente: " + pathCifrado);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "No se cifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeySpecException ex) {
                JOptionPane.showMessageDialog(null, "No se cifro correctamente: " + ex.getMessage());

                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                JOptionPane.showMessageDialog(null, "No se cifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalBlockSizeException ex) {
                JOptionPane.showMessageDialog(null, "No se cifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BadPaddingException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    /**
     * Selecciona la carpeta donde esta almacenado el archivo cifrado
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void BuscarArchivoCifrado() {
        //Crea objeto de tipo File chooser y muetra pantalla de abrir archivo
        JFileChooser file = new JFileChooser();
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathArchivoDescifrar.setText(archivo.getAbsolutePath());

        }

    }

    /**
     * Selecciona la carpeta donde esta almacenado el archivo de clave privada
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void BuscarClavePriv() {
        //Crea objeto de tipo File chooser y muetra pantalla de abrir archivo
        JFileChooser file = new JFileChooser();
        file.showOpenDialog(this);
        File archivo = file.getSelectedFile();
        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathClavePriv.setText(archivo.getAbsolutePath());

        }

    }

    /**
     * Selecciona la carpeta donde desea almacenar el archivo descifrado
     *
     * @param
     * @return
     * @throws IOException
     * @throws FileNotFoundException
     * @throws NullPointerException
     */
    public void CarpetaDestinoDescifrado() {
        //Crea objeto de tipo File chooser y muetra pantalla de guardar archivo
        JFileChooser chooser = new JFileChooser();
        chooser.showSaveDialog(this);
        File archivo = chooser.getSelectedFile();
        //Verifica si el archivo no es null y pasa la direccion al TextField
        if (archivo != null) {
            pathArchivoDescifrado.setText(archivo.getAbsolutePath());

        }

    }

    /**
     * Valida si la información para descifrar esta completa
     *
     * @param
     * @return
     * @throws IOException
     */
    public void Descifrar() {

        //Valida si se completaron los campos de texto y arroja mensaje de confirmación
        if (this.pathArchivoDescifrar.getText().isEmpty() || this.pathClavePriv.getText().isEmpty() || this.pathArchivoDescifrado.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Por favor, complete la información");

        } else {
            this.pathArchivoCifrado = this.pathArchivoDescifrar.getText().toString();
            this.pathClavePrivada = this.pathClavePriv.getText().toString();
            this.pathSalidaDescifrado = this.pathArchivoDescifrado.getText().toString();
            try {
                String pathDescifrado = fileShare.descifrarArchivo(this.pathSalidaDescifrado,
                        this.pathArchivoCifrado,
                        this.pathClavePrivada);
                JOptionPane.showMessageDialog(null, "Se han descrifrado correctamente: " + pathDescifrado);

            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "No se descifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                JOptionPane.showMessageDialog(null, "No se descifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalBlockSizeException ex) {
                JOptionPane.showMessageDialog(null, "No se descifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BadPaddingException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeySpecException ex) {
                JOptionPane.showMessageDialog(null, "No se descifro correctamente: " + ex.getMessage());
                Logger.getLogger(Claves.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }
}
